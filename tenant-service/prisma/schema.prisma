datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  TRAINEE
  TRAINER
  HOD
  ADMIN
  REGISTRAR
  STAFF
  SUPER_ADMIN
  MANAGEMENT_REP
  AUDITOR
}

enum InstitutionType {
  UNIVERSITY
  COLLEGE
  SCHOOL
  INSTITUTE
  OTHER
}

enum InstitutionStatus {
  ACTIVE
  INACTIVE
  PENDING
}

model Tenant {
  id                  String    @id @default(uuid())
  name                String    @unique
  domain              String    @unique
  logoUrl             String?
  address             String?
  city                String?
  state               String?
  country             String?
  phone               String?
  email               String    @unique
  type                InstitutionType
  accreditationNumber String?
  establishedYear     Int?
  timezone            String?
  currency            String?
  status              InstitutionStatus @default(PENDING)
  createdBy           String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  users               User[]
  departments         Department[]
}

model Department {
  id        String    @id @default(uuid())
  name      String
  code      String?   @unique
  tenantId  String
  tenant    Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  headId    String?   @unique
  head      User?     @relation("DepartmentHead", fields: [headId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  role         UserRole
  firstName    String?
  lastName     String?
  verified     Boolean     @default(false)
  tenantId     String
  tenant       Tenant      @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  departmentId String?
  department   Department? @relation(fields: [departmentId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  headedDepartment Department? @relation("DepartmentHead")
}